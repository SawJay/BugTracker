@page "/tickets/mytickets"

@using BugTracker.Client.Components.UI.Projects
@using BugTracker.Client.Components.UI.Tickets
@using Microsoft.AspNetCore.Authorization
@using BugTracker.Client.Services.Interfaces
@using BugTracker.Client.Models
@using BugTracker.Client.Helpers
@using BugTracker.Client.Components.Pages
@inject ITicketDTOService TicketService
@rendermode InteractiveAuto
@attribute [Authorize]

<PageTitle>Tickets</PageTitle>

<div class="row">
    <div class="col-lg-3 col-md-4 col-xs-12 justify-content-start align-items-center">
        <h5 class="text-uppercase mb-0 pt-3">
            My Tickets
        </h5>
    </div>
    <div class="col-lg-9 col-md-8 col-xs-12 justify-content-end align-self-center d-flex">
        <a class="btn btn-outline-success justify-content-end" href="tickets/add">Add Ticket</a>
    </div>
</div>
<AuthorizeView>
    @if(context.User.IsInRole("ProjectManager"))
    {
        <div class="table-responsive mt-4">
            <table class="table table-striped table-bordered">
                <thead class="table">
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th class="text-center">Project</th>
                        <th class="text-center">Priority</th>
                        <th class="text-center">Status</th>
                        <th class="text-center">Edit</th>
                        <th class="text-center">Archive</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (TicketDTO ticket in tickets)
                    {
                        <TicketTableItem Ticket="ticket" OnSubmit="HandleArchive" />
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="table-responsive mt-4">
            <table class="table table-striped table-bordered">
                <thead class="table">
                    <tr>
                        <th>ID</th>
                        <th>Title</th>
                        <th class="text-center">Project</th>
                        <th class="text-center">Priority</th>
                        <th class="text-center">Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (TicketDTO ticket in tickets)
                    {
                        <LimitedTicketTableItem Ticket="ticket" />
                    }
                </tbody>
            </table>
        </div>
    }
</AuthorizeView>

@code {

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }

    private UserInfo? userInfo;
    private IEnumerable<TicketDTO> tickets = [];

    protected override async Task OnInitializedAsync()
    {
        userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);
        tickets = await TicketService.GetUserTicketsAsync(userInfo!.CompanyId, userInfo.UserId);
    }

    private async Task HandleArchive(int ticketId)
    {
        await TicketService.ArchiveTicketAsync(ticketId, userInfo!.CompanyId);
        tickets = await TicketService.GetUserTicketsAsync(userInfo!.CompanyId, userInfo.UserId);
    }

}